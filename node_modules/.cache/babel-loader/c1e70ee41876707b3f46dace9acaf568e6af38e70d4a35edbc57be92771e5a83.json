{"ast":null,"code":"var _jsxFileName = \"C:\\\\Springboard\\\\Springboard\\\\Springboard\\\\Exercises\\\\Pokedex\\\\my-app\\\\src\\\\Pokedex.js\";\nimport React from \"react\";\nimport Pokecard from \"./Pokecard\";\nimport \"./Pokedex.css\";\n\n/** Index of Pokemon: show individual cards. */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Pokedex(props) {\n  let winMessage = null;\n  if (props.isWinner) {\n    winMessage = /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"Pokedex-winner\",\n      children: \"THIS HAND WINS!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 18\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Pokedex\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"Pokedex-title\",\n      children: \"Pokedex\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Pokedex-cards\",\n      children: props.pokemon.map(p => /*#__PURE__*/_jsxDEV(Pokecard, {\n        id: p.id,\n        name: p.name,\n        type: p.type,\n        exp: p.base_experience\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"Total experience: \", props.exp]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), winMessage]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n_c = Pokedex;\nexport default Pokedex;\nvar _c;\n$RefreshReg$(_c, \"Pokedex\");","map":{"version":3,"names":["React","Pokecard","jsxDEV","_jsxDEV","Pokedex","props","winMessage","isWinner","className","children","fileName","_jsxFileName","lineNumber","columnNumber","pokemon","map","p","id","name","type","exp","base_experience","_c","$RefreshReg$"],"sources":["C:/Springboard/Springboard/Springboard/Exercises/Pokedex/my-app/src/Pokedex.js"],"sourcesContent":["import React from \"react\";\r\nimport Pokecard from \"./Pokecard\";\r\nimport \"./Pokedex.css\";\r\n\r\n/** Index of Pokemon: show individual cards. */\r\n\r\nfunction Pokedex(props) {\r\n  let winMessage = null;\r\n  if (props.isWinner) {\r\n    winMessage = <p className=\"Pokedex-winner\">THIS HAND WINS!</p>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"Pokedex\">\r\n      <h2 className=\"Pokedex-title\">Pokedex</h2>\r\n      <div className=\"Pokedex-cards\">\r\n        {props.pokemon.map((p) => (\r\n          <Pokecard\r\n            id={p.id}\r\n            name={p.name}\r\n            type={p.type}\r\n            exp={p.base_experience}\r\n          />\r\n        ))}\r\n      </div>\r\n      <h4>Total experience: {props.exp}</h4>\r\n      {winMessage}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Pokedex;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAO,eAAe;;AAEtB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,SAASC,OAAOA,CAACC,KAAK,EAAE;EACtB,IAAIC,UAAU,GAAG,IAAI;EACrB,IAAID,KAAK,CAACE,QAAQ,EAAE;IAClBD,UAAU,gBAAGH,OAAA;MAAGK,SAAS,EAAC,gBAAgB;MAAAC,QAAA,EAAC;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAChE;EAEA,oBACEV,OAAA;IAAKK,SAAS,EAAC,SAAS;IAAAC,QAAA,gBACtBN,OAAA;MAAIK,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1CV,OAAA;MAAKK,SAAS,EAAC,eAAe;MAAAC,QAAA,EAC3BJ,KAAK,CAACS,OAAO,CAACC,GAAG,CAAEC,CAAC,iBACnBb,OAAA,CAACF,QAAQ;QACPgB,EAAE,EAAED,CAAC,CAACC,EAAG;QACTC,IAAI,EAAEF,CAAC,CAACE,IAAK;QACbC,IAAI,EAAEH,CAAC,CAACG,IAAK;QACbC,GAAG,EAAEJ,CAAC,CAACK;MAAgB;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNV,OAAA;MAAAM,QAAA,GAAI,oBAAkB,EAACJ,KAAK,CAACe,GAAG;IAAA;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EACrCP,UAAU;EAAA;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEV;AAACS,EAAA,GAvBQlB,OAAO;AAyBhB,eAAeA,OAAO;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}